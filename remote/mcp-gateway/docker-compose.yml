services:
  posthog-mcp:
    image: node:20-alpine
    container_name: posthog-mcp
    working_dir: /app
    volumes:
      - ./posthog-official-server.js:/app/server.js
      - ./.env:/app/.env
    command: ["node", "server.js"]
    environment:
      - POSTHOG_API_KEY=${POSTHOG_API_KEY}
      - POSTHOG_PROJECT_ID=${POSTHOG_PROJECT_ID}
      - POSTHOG_BASE_URL=https://eu.posthog.com
      - PORT=8082
    networks:
      - mcp-network
    restart: unless-stopped

  googleads-mcp:
    image: node:20-alpine
    container_name: googleads-mcp
    working_dir: /app
    volumes:
      - ./googleads-official-server.js:/app/server.js
      - ./.env:/app/.env
    command: ["node", "server.js"]
    environment:
      - GOOGLE_ADS_CUSTOMER_ID=${GOOGLE_ADS_CUSTOMER_ID}
      - GOOGLE_ADS_DEVELOPER_TOKEN=${GOOGLE_ADS_DEVELOPER_TOKEN}
      - GOOGLE_ADS_ACCESS_TOKEN=${GOOGLE_ADS_ACCESS_TOKEN}
      - GOOGLE_ADS_REFRESH_TOKEN=${GOOGLE_ADS_REFRESH_TOKEN}
      - GOOGLE_ADS_CLIENT_ID=${GOOGLE_ADS_CLIENT_ID}
      - GOOGLE_ADS_CLIENT_SECRET=${GOOGLE_ADS_CLIENT_SECRET}
      - PORT=8083
    networks:
      - mcp-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    image: nginx:alpine
    container_name: nginx-mcp
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - posthog-mcp
      - googleads-mcp
    networks:
      - mcp-network
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

networks:
  mcp-network:
    driver: bridge